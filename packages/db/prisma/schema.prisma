// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
    // output   = "../generated/prisma"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String    @id @default(uuid())
    name          String?
    email         String    @unique
    username      String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    rooms         Room[]
    Chat          Chat[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Account {
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@id([provider, providerAccountId])
}

model VerificationToken {
    identifier String
    token      String
    expires    DateTime

    @@id([identifier, token])
}

model Room {
    id        String   @id @default(uuid())
    name      String
    slug      String   @unique
    isActive  Boolean  @default(false)
    createdAt DateTime @default(now())
    adminId   String
    chats     Chat[]

    admin User @relation(fields: [adminId], references: [id])
}

model Chat {
    id        String   @id @default(uuid())
    chat      Json
    createdAt DateTime @default(now())
    roomId    String
    userId    String

    room Room @relation(fields: [roomId], references: [id])
    user User @relation(fields: [userId], references: [id])
}
